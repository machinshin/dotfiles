#$Id$: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

#change command sequence to alt-`
#unbind C-b
set-option -g prefix `
bind-key ` send-prefix
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind v split-window -v
bind \ split-window -h
bind r source-file ~/.tmux.conf \; display-message "Config reloaded . . ."
bind d detach-client -a \; display "Detached!"

# Quick pane selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# move around panes with hjkl, as one would in vim after pressing ctrl-w
#bottom pane
bind j select-pane -D
#top pane
bind k select-pane -U
#right pane
bind h select-pane -L
#right pane
bind l select-pane -R
bind -n M-k swap-pane -D
# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resizep -L 5
bind > resizep -R 5
bind - resizep -D 5
bind = resizep -U 5
bind Z resizep -Z
bind-key S set-window-option synchronize-panes

#join panes
bind C-j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind C-k command-prompt -p "send pane to:" "join-pane -t '%%'"
#split pane
bind C-b break-pane -t :

# vi-style controls for copy mode
setw -g mode-keys vi
setw -g status-keys vi
#unbind [
#bind Escape copy-mode
#unbind p
#unbind n
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle
bind-key -t vi-copy C-j page-down
bind-key -t vi-copy C-k page-up
bind-key -t vi-copy ? search-backward
bind-key -t vi-copy ^ back-to-indentation
bind-key -t vi-copy '$' end-of-line

#set -g default-command zsh
#set-option -g default-shell /opt/local/bin/zsh
set -g display-time 3000
#number windows starting from 1
set -g base-index 1
#same for panes
setw -g pane-base-index 1
# window control
bind - last-window
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-window-option -g mode-mouse on
# Bind function keys.
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9
bind 0 select-window -t 0
# update status bar every 60 seconds
set -g status-interval 60
#bind-key b set-option status
bind '~' split-window "exec htop"

#scrollback buffer n lines
set -g history-limit 9999999

#listen for activity on all windows
set -g bell-action none
#set window notifications
setw -g monitor-activity off
set -g visual-activity off
#onscreen time for display panes in ms
set -g display-panes-time 2000
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
#set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S#[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami)#[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set-window-option -g window-status-current-format '#[bg=red,fg=cyan]#I#[bg=red,fg=cyan]:#[fg=colour230,bg=red]#W#[fg=dim]#F'
#set-window-option -g window-status-format '#[fg=colour166,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W#[fg=colour39,bg=colour234,nobold]⮀"

#set-option -g status-left '#S|#P|#T|#D'
#ctrl-pgup & pgdn work in vim
set -g xterm-keys on

#select-window -t 1
#highlight active window
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
setw -g automatic-rename off
#osx clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g default-terminal "xterm-256color"
#set -g xterm-keys on
#supposedly fixes pausing in vim
set-option -sg escape-time 1
set-option -g status-utf8 on
set-option -g status-justify centre
#status bar
set -g status-bg black
set -g status-fg white
#status right options
set -g status-right '#[fg=yellow][%a, %b %d %Y | #[fg=colour166]%r]#[default]'
set-option -g pane-active-border-fg red
set-option -g pane-active-border-bg white
set-option -g pane-border-fg yellow
set-option -g pane-border-bg black
set-option -g status-position top
# Command / message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright
bind-key V new-window -n vagrant \; send-keys "j -1 ct && vagrant ssh srv1"\; send-keys "Enter"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste buffer"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-e command-prompt -p "session?,message?" "run-shell \"tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\{\} tmux send-keys -t %1:\{\} %2\" Enter"
